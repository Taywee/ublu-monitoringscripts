# sysshep.scheduled_job_status.sh: check a scheduled job status for existence and also matching against an expected status 
# autogenerated Tue Dec 17 16:27:15 MST 2019 by taylor using command:
# gensh -to sysshep.scheduled_job_status.sh -path /opt/ublu/ublu.jar -includepath $SCRIPTDIR -optr p PROPERTIES @properties ${ credentials properties file }$ -optr j JOBNAME @jobname ${ The name of the job to check the status of }$ -opt w WHITELIST @whitelist ${ An optional whitelist regex for matching against job status. If the job status does not match this, a critical alarm will be raised }$ -opt b BLACKLIST @blacklist ${ An optional blacklist regex for matching against job status. If the job status matches this, a critical alarm will be raised }$ ${ sysshep.scheduled_job_status.sh: check a scheduled job status for existence and also matching against an expected status }$ sysshep/scheduled_job_status.ublu ${ sysshep.scheduled_job_status ( @properties @jobname @whitelist @blacklist ) }$

# Usage message
function usage {
echo "sysshep.scheduled_job_status.sh: check a scheduled job status for existence and also matching against an expected status "
echo "This shell script was autogenerated Tue Dec 17 16:27:15 MST 2019 by taylor."
echo "Usage: $0 [glob] [silent] [-h] [-X...] [-Dprop=val] -p PROPERTIES -j JOBNAME [-w WHITELIST] [-b BLACKLIST]"
echo "	where"
echo "	-h		display this help message and exit 0"
echo "	-X xOpt		pass a -X option to the JVM (can be used many times)"
echo "	-D some.property=\"some value\"	pass a property to the JVM (can be used many times)"
echo "	-p PROPERTIES	credentials properties file  (required option)"
echo "	-j JOBNAME	The name of the job to check the status of  (required option)"
echo "	-w WHITELIST	An optional whitelist regex for matching against job status. If the job status does not match this, a critical alarm will be raised "
echo "	-b BLACKLIST	An optional blacklist regex for matching against job status. If the job status matches this, a critical alarm will be raised "
echo "---"
echo "If the keyword 'glob' appears ahead of all other options and arguments, only then will arguments be globbed by the executing shell (noglob default)."
echo "If the keyword 'silent' appears ahead of all options except 'glob' (if the latter is present), then included files will not echo and prompting is suppressed."
echo "Exit code is the result of execution, or 0 for -h or 2 if there is an error in processing options."
echo "This script sets \$SCRIPTDIR to the script's directory prior to executing prelude commands and Ublu invocation."
}

#Test if user wants arguments globbed - default noglob
if [ "$1" == "glob" ]
then
	set +o noglob # POSIX
	shift
else
	set -o noglob # POSIX
fi

#Test if user wants silent includes
if [ "$1" == "silent" ]
then
	SILENT="-silent "
	shift
else
	SILENT=""
fi

# Process options
while getopts p:j:w:b:D:X:h the_opt
do
	case "$the_opt" in
		p)	PROPERTIES="$OPTARG";;
		j)	JOBNAME="$OPTARG";;
		w)	WHITELIST="$OPTARG";;
		b)	BLACKLIST="$OPTARG";;
		h)	usage;exit 0;;
		D)	JVMPROPS="${JVMPROPS} -D${OPTARG}";;
		X)	JVMOPTS="${JVMOPTS} -X${OPTARG}";;
		[?])	usage;exit 2;;

	esac
done
shift `expr ${OPTIND} - 1`
if [ $# -ne 0 ]
then
	echo "Superfluous argument(s) $*"
	usage
	exit 2
fi

# Translate options to tuple assignments
if [ "${PROPERTIES}" != "" ]
then
	gensh_runtime_opts="${gensh_runtime_opts}string -to @properties -trim \${ ${PROPERTIES} }$ "
else
	echo "Option -p PROPERTIES is a required option but is not present."
	usage
	exit 2
fi
if [ "${JOBNAME}" != "" ]
then
	gensh_runtime_opts="${gensh_runtime_opts}string -to @jobname -trim \${ ${JOBNAME} }$ "
else
	echo "Option -j JOBNAME is a required option but is not present."
	usage
	exit 2
fi
if [ "${WHITELIST}" != "" ]
then
	gensh_runtime_opts="${gensh_runtime_opts}string -to @whitelist -trim \${ ${WHITELIST} }$ "
fi
if [ "${BLACKLIST}" != "" ]
then
	gensh_runtime_opts="${gensh_runtime_opts}string -to @blacklist -trim \${ ${BLACKLIST} }$ "
fi

SCRIPTDIR=$(CDPATH= cd "$(dirname "$0")" && pwd)

# Prelude commands to execute before invocation
# No prelude commands

set -o noglob

# Invocation
java${JVMOPTS}${JVMPROPS} -Dublu.includepath="$SCRIPTDIR" -jar /opt/ublu/ublu.jar ${gensh_runtime_opts} include ${SILENT}sysshep/scheduled_job_status.ublu sysshep.scheduled_job_status \( @properties @jobname @whitelist @blacklist \) 
exit $?
