# sysshep.alarm_msgw.sh: monitors a user's message queue for messages waiting 
# autogenerated Wed Feb 01 10:04:50 MST 2017 by taylor using command:
# gensh -to sysshep.alarm_msgw.sh -path /opt/ublu/ublu.jar -includepath $SCRIPTDIR -optr p PROPERTIES @properties ${ credentials properties file }$ -opt q QUSERNAME @qusername ${ username to be monitored (defaults to QSYSOPR) }$ ${ sysshep.alarm_msgw.sh: monitors a user's message queue for messages waiting }$ sysshep/alarm_msgw.ublu ${ sysshep.alarm_msgw ( @properties @qusername ) }$

# Usage message
function usage {
echo "sysshep.alarm_msgw.sh: monitors a user's message queue for messages waiting "
echo "This shell script was autogenerated Wed Feb 01 10:04:50 MST 2017 by taylor."
echo "Usage: $0 [silent] -h -p PROPERTIES -q QUSERNAME "
echo "	where"
echo "	-h		display this help message and exit 0"
echo "	-p PROPERTIES	credentials properties file  (required option)"
echo "	-q QUSERNAME	username to be monitored (defaults to QSYSOPR)"
echo "	-d DKEY	An extra dkey field to add"
echo "	-M MATCHPATTERN	Pattern specifying which messages to match. This is not a search, it must match exactly, so you will likely need to use .+ or .* at the beginning and end."
echo "	-I IGNOREPATTERN	Pattern specifying which messages to ignore. This is not a search, it must match exactly, so you will likely need to use .+ or .* at the beginning and end."
echo "---"
echo "If the keyword 'silent' appears ahead of all options, then included files will not echo and prompting is suppressed."
echo "Exit code is the result of execution, or 0 for -h or 2 if there is an error in processing options"
}

#Test if user wants silent includes
if [ "$1" == "silent" ]
then
	SILENT="-silent "
	shift
else
	SILENT=""
fi

# Process options
while getopts p:q:I:h the_opt
do
	case "$the_opt" in
		p)	PROPERTIES="$OPTARG";;
		q)	QUSERNAME="$OPTARG";;
		d)	DKEY="$OPTARG";;
		I)	IGNOREPATTERN="$OPTARG";;
		M)	MATCHPATTERN="$OPTARG";;
		h)	usage;exit 0;;
		[?])	usage;exit 2;;

	esac
done
shift `expr ${OPTIND} - 1`
if [ $# -ne 0 ]
then
	echo "Superfluous argument(s) $*"
	usage
	exit 2
fi

# Translate options to tuple assignments
if [ "${PROPERTIES}" != "" ]
then
	gensh_runtime_opts="${gensh_runtime_opts}string -to @properties -trim \${ ${PROPERTIES} }$ "
else
	echo "Option -p PROPERTIES is a required option but is not present."
	usage
	exit 2
fi
if [ "${QUSERNAME}" != "" ]
then
	gensh_runtime_opts="${gensh_runtime_opts}string -to @qusername -trim \${ ${QUSERNAME} }$ "
fi
if [ "${DKEY}" != "" ]
then
	gensh_runtime_opts="${gensh_runtime_opts}string -to @extrakey -trim \${ ${DKEY} }$ "
fi
if [ "${IGNOREPATTERN}" != "" ]
then
	gensh_runtime_opts="${gensh_runtime_opts}string -to @ignorepattern -trim \${ ${IGNOREPATTERN} }$ "
fi

if [ "${MATCHPATTERN}" != "" ]
then
	gensh_runtime_opts="${gensh_runtime_opts}string -to @matchpattern -trim \${ ${MATCHPATTERN} }$ "
fi

SCRIPTDIR=$(CDPATH= cd "$(dirname "$0")" && pwd)
set -o noglob

# Invocation
java -Dublu.includepath="$SCRIPTDIR" -jar /opt/ublu/ublu.jar ${gensh_runtime_opts} include ${SILENT}sysshep/alarm_msgw.ublu sysshep.alarm_msgw \( @properties @qusername @ignorepattern @matchpattern @extrakey \) 
exit $?
